name: zhipin

on:
  schedule:
    - cron: "0 0,6,12,18 * * *"
  workflow_dispatch:
    inputs:
      args:
        description: "Use args"
        required: false
        default: "    "
        type: string

env:
  REPOSITORY: "no-job"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.4
        with:
          repository: "${{ github.actor }}/${{ env.REPOSITORY }}"
          token: ${{ secrets.PAT }}
      - run: |
          sudo apt-get update
          sudo apt-get install -y fonts-wqy-zenhei
          sudo apt-get install -y language-pack-zh-hans
          sudo locale-gen zh_CN.UTF-8
          sudo update-locale LANG=zh_CN.UTF-8
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install -r zhipin/requirements.txt
      - name: Install Chrome
        run: |
          sudo apt install google-chrome-stable
      - name: Check the console scripts interface
        run: |
          seleniumbase
          sbase
      - name: Install chromedriver
        run: |
          seleniumbase install chromedriver
          seleniumbase install uc_driver
      - name: Make sure pytest is working
        run: |
          echo "def test_1(): pass" > nothing.py
          pytest nothing.py
      - name: Make sure nosetests is working
        run: |
          echo "def test_2(): pass" > nothing2.py
          nosetests nothing2.py
      - uses: robinraju/release-downloader@v1.10
        continue-on-error: true
        with:
          repository: "${{ github.actor }}/${{ env.REPOSITORY }}"
          tag: "zhipin"
          fileName: "*.json"
          out-file-path: "zhipin"
          token: ${{ secrets.PAT }}
      - run: |
          chmod +x sh/wireguard.sh
          sudo bash sh/wireguard.sh
        if: ${{ !vars.PROXY_URL }}
      - name: Run pytest
        env:
          STATE: ${{ vars.STATE }}
          CONFIG_URL: ${{ vars.CONFIG_URL }}
          DB_URL: ${{ secrets.DB_URL }}
          PROXY_URL: ${{ vars.PROXY_URL }}
          OPENAI_BASE_URL: ${{ secrets.OPENAI_BASE_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SAVED_COOKIES: ${{ secrets.SAVED_COOKIES }}
        run: |
          cd zhipin
          pytest zhipin_sb.py --uc --browser=chrome --headless2 ${{ inputs.args }} --chromium-arg="--proxy-server=$PROXY_URL"  -v -s --junit-xml=junit/test-results.xml --do-not-track --uc-cdp-events --log-cdp
      - uses: actions/upload-artifact@v4.3.3
        if: always()
        with:
          path: |
            zhipin/*.txt
            zhipin/*.json
            zhipin/*/*.jsonl
            zhipin/*.xml
            zhipin/junit/*
            zhipin/latest_logs/*/*
      - uses: ncipollo/release-action@v1
        if: always()
        with:
          repo: ${{ env.REPOSITORY }}
          artifacts: "zhipin/*.json"
          allowUpdates: true
          replacesArtifacts: true
          tag: zhipin
          prerelease: true
          token: ${{ secrets.PAT }}
