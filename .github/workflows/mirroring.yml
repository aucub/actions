name: Mirroring

permissions: read-all

on:
  schedule:
    - cron: "0 18 * * 3"
  workflow_dispatch:

jobs:
  setup_matrix:
    runs-on: ubuntu-latest
    outputs:
      MIRRORING_REPO: ${{ steps.get_repos.outputs.result }}
    steps:
      - name: Get all repositories
        id: get_repos
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const { data } = await github.rest.repos.listForAuthenticatedUser();
            const repoNames = data.map(repo => repo.name);
            const excludeRepos = process.env.EXCLUDE_MIRRORING_REPO.split(",");
            const result = repoNames.filter(repo => !excludeRepos.includes(repo));
            return { repo: result };
        env:
          EXCLUDE_MIRRORING_REPO: ${{ vars.EXCLUDE_MIRRORING_REPO }}
      - run: echo "${{ toJSON(steps.get_repos.outputs.result) }}"
  to_gitlab:
    runs-on: ubuntu-latest
    needs: setup_matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup_matrix.outputs.MIRRORING_REPO) }}
    steps:
      - run: |
          git lfs install
          git config --global push.autoSetupRemote true
      - uses: actions/checkout@v4.1.4
        with:
          fetch-depth: 0
          repository: "${{ github.actor }}/${{ matrix.repo }}"
          token: ${{ secrets.PAT }}
          lfs: true
          submodules: true
      - uses: yesolutions/mirror-action@master
        with:
          REMOTE: "https://gitlab.com/${{ secrets.GITLAB_ACTOR }}/${{ matrix.repo }}.git"
          GIT_USERNAME: ${{ secrets.GITLAB_ACTOR }}
          GIT_PASSWORD: ${{ secrets.GITLAB_PASSWORD }}
